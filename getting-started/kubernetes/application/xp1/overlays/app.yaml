apiVersion: v1
kind: Service
metadata:
  name: cd
spec:
  ports:
  - port: 80
    protocol: TCP
  selector:
    app: cd
---
apiVersion: v1
kind: Service
metadata:
  name: cm
spec:
  ports:
  - port: 80
    protocol: TCP
  selector:
    app: cm
---
apiVersion: v1
kind: Service
metadata:
  name: cortexprocessing
spec:
  ports:
  - port: 80
    protocol: TCP
  selector:
    app: cortexprocessing
---
apiVersion: v1
kind: Service
metadata:
  name: cortexprocessingworker
spec:
  ports:
  - port: 8080
    protocol: TCP
  selector:
    app: cortexprocessingworker
---
apiVersion: v1
kind: Service
metadata:
  name: cortexreporting
spec:
  ports:
  - port: 80
    protocol: TCP
  selector:
    app: cortexreporting
---
apiVersion: v1
kind: Service
metadata:
  name: id
spec:
  ports:
  - port: 80
    protocol: TCP
  selector:
    app: id
---
apiVersion: v1
kind: Service
metadata:
  name: prc
spec:
  ports:
  - port: 80
    protocol: TCP
  selector:
    app: prc
---
apiVersion: v1
kind: Service
metadata:
  name: xdbautomation
spec:
  ports:
  - port: 80
    protocol: TCP
  selector:
    app: xdbautomation
---
apiVersion: v1
kind: Service
metadata:
  name: xdbautomationrpt
spec:
  ports:
  - port: 80
    protocol: TCP
  selector:
    app: xdbautomationrpt
---
apiVersion: v1
kind: Service
metadata:
  name: xdbautomationworker
spec:
  ports:
  - port: 8080
    protocol: TCP
  selector:
    app: xdbautomationworker
---
apiVersion: v1
kind: Service
metadata:
  name: xdbcollection
spec:
  ports:
  - port: 80
    protocol: TCP
  selector:
    app: xdbcollection
---
apiVersion: v1
kind: Service
metadata:
  name: xdbrefdata
spec:
  ports:
  - port: 80
    protocol: TCP
  selector:
    app: xdbrefdata
---
apiVersion: v1
kind: Service
metadata:
  name: xdbsearch
spec:
  ports:
  - port: 80
    protocol: TCP
  selector:
    app: xdbsearch
---
apiVersion: v1
kind: Service
metadata:
  name: xdbsearchworker
spec:
  ports:
  - port: 8080
    protocol: TCP
  selector:
    app: xdbsearchworker
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: cd
  name: cd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cd
  template:
    metadata:
      labels:
        app: cd
    spec:
      containers:
      - env:
        - name: Sitecore_InstanceName
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: Database_Server
          valueFrom:
            secretKeyRef:
              key: sitecore-databaseservername.txt
              name: sitecore-database
        - name: Core_Database_Username
          valueFrom:
            secretKeyRef:
              key: sitecore-core-database-username.txt
              name: sitecore-database
        - name: Core_Database_Password
          valueFrom:
            secretKeyRef:
              key: sitecore-core-database-password.txt
              name: sitecore-database
        - name: Web_Database_Username
          valueFrom:
            secretKeyRef:
              key: sitecore-web-database-username.txt
              name: sitecore-database
        - name: Web_Database_Password
          valueFrom:
            secretKeyRef:
              key: sitecore-web-database-password.txt
              name: sitecore-database
        - name: Forms_Database_Username
          valueFrom:
            secretKeyRef:
              key: sitecore-forms-database-username.txt
              name: sitecore-database
        - name: Forms_Database_Password
          valueFrom:
            secretKeyRef:
              key: sitecore-forms-database-password.txt
              name: sitecore-database
        - name: Exm_Master_Database_Username
          valueFrom:
            secretKeyRef:
              key: sitecore-exm-master-database-username.txt
              name: sitecore-database
        - name: Exm_Master_Database_Password
          valueFrom:
            secretKeyRef:
              key: sitecore-exm-master-database-password.txt
              name: sitecore-database
        - name: Messaging_Database_Username
          valueFrom:
            secretKeyRef:
              key: sitecore-messaging-database-username.txt
              name: sitecore-database
        - name: Messaging_Database_Password
          valueFrom:
            secretKeyRef:
              key: sitecore-messaging-database-password.txt
              name: sitecore-database
        - name: Sitecore_License
          valueFrom:
            secretKeyRef:
              key: sitecore-license.txt
              name: sitecore-license
        - name: Sitecore_ConnectionStrings_Security
          value: Data Source=$(Database_Server);Initial Catalog=Sitecore.Core;User
            ID=$(Core_Database_Username);Password=$(Core_Database_Password);
        - name: Sitecore_ConnectionStrings_Web
          value: Data Source=$(Database_Server);Initial Catalog=Sitecore.Web;User
            ID=$(Web_Database_Username);Password=$(Web_Database_Password);
        - name: Sitecore_ConnectionStrings_Messaging
          value: Data Source=$(Database_Server);Initial Catalog=Sitecore.Messaging;User
            ID=$(Messaging_Database_Username);Password=$(Messaging_Database_Password);
        - name: Sitecore_ConnectionStrings_ExperienceForms
          value: Data Source=$(Database_Server);Initial Catalog=Sitecore.ExperienceForms;User
            ID=$(Forms_Database_Username);Password=$(Forms_Database_Password);
        - name: Sitecore_ConnectionStrings_Exm.Master
          value: Data Source=$(Database_Server);Initial Catalog=Sitecore.Exm.master;User
            ID=$(Exm_Master_Database_Username);Password=$(Exm_Master_Database_Password);
        - name: Sitecore_ConnectionStrings_Solr.Search
          valueFrom:
            secretKeyRef:
              key: sitecore-solr-connection-string.txt
              name: sitecore-solr
        - name: Sitecore_ConnectionStrings_XConnect.Collection
          value: http://xdbcollection
        - name: Sitecore_ConnectionStrings_Xdb.MarketingAutomation.Operations.Client
          value: http://xdbautomation
        - name: Sitecore_ConnectionStrings_Xdb.MarketingAutomation.Reporting.Client
          value: http://xdbautomationrpt
        - name: Sitecore_ConnectionStrings_Xdb.ReferenceData.Client
          value: http://xdbrefdata
        - name: Sitecore_ConnectionStrings_Redis.Sessions
          value: redis:6379,ssl=False,abortConnect=False
        - name: SOLR_CORE_PREFIX_NAME
          valueFrom:
            secretKeyRef:
              key: sitecore-solr-core-prefix-name.txt
              name: sitecore-solr
        - name: MEDIA_REQUEST_PROTECTION_SHARED_SECRET
          valueFrom:
            secretKeyRef:
              key: sitecore-media-request-protection-shared-secret.txt
              name: sitecore-protect-media-requests
        image: mbtestacr.azurecr.io/docker-examples/docker-examples-xp1-cd:320
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders:
            - name: X-Kubernetes-Probe
              value: Liveness
            path: /healthz/live
            port: 80
          periodSeconds: 30
          timeoutSeconds: 300
        name: sitecore-xp1-cd
        ports:
        - containerPort: 80
        resources:
          limits:
            cpu: 2000m
            memory: 3Gi
          requests:
            cpu: 1000m
            memory: 1Gi
        startupProbe:
          failureThreshold: 10
          httpGet:
            httpHeaders:
            - name: X-Kubernetes-Probe
              value: Startup
            path: /healthz/ready
            port: 80
          periodSeconds: 30
          timeoutSeconds: 300
        volumeMounts:
        - mountPath: C:\inetpub\wwwroot\App_Data\Submit Queue
          name: submit-queue
      imagePullSecrets:
      - name: sitecore-docker-registry
      initContainers:
      - command:
        - pwsh
        - -Command
        - do { Start-Sleep -Seconds 3 } until ($(try {(iwr http://xdbcollection/healthz/ready).StatusCode
          -eq 200} catch { $false }));
        image: mcr.microsoft.com/powershell:lts-nanoserver-1809
        name: wait-xdbcollection
      - command:
        - pwsh
        - -Command
        - do { Start-Sleep -Seconds 3 } until ($(try {(iwr http://xdbautomation/healthz/ready).StatusCode
          -eq 200} catch { $false }));
        image: mcr.microsoft.com/powershell:lts-nanoserver-1809
        name: wait-xdbautomation
      - command:
        - pwsh
        - -Command
        - do { Start-Sleep -Seconds 3 } until ($(try {(iwr http://xdbautomationrpt/healthz/ready).StatusCode
          -eq 200} catch { $false }));
        image: mcr.microsoft.com/powershell:lts-nanoserver-1809
        name: wait-xdbautomationrpt
      - command:
        - pwsh
        - -Command
        - do { Start-Sleep -Seconds 3 } until ($(try {(iwr http://xdbrefdata/healthz/ready).StatusCode
          -eq 200} catch { $false }));
        image: mcr.microsoft.com/powershell:lts-nanoserver-1809
        name: wait-xdbrefdata
      nodeSelector:
        kubernetes.io/os: windows
      volumes:
      - name: submit-queue
        persistentVolumeClaim:
          claimName: submit-queue
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: cm
  name: cm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cm
  template:
    metadata:
      labels:
        app: cm
    spec:
      containers:
      - env:
        - name: Sitecore_Horizon_ClientHost
          value: https://hrz.docker-examples.tk
        - name: Sitecore_Identity_Server_Authority
          value: https://id.docker-examples.tk
        - name: Sitecore_Identity_Server_CallbackAuthority
          value: https://cm.docker-examples.tk
        - name: Sitecore_InstanceName
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: Database_Server
          valueFrom:
            secretKeyRef:
              key: sitecore-databaseservername.txt
              name: sitecore-database
        - name: Master_Database_Username
          valueFrom:
            secretKeyRef:
              key: sitecore-master-database-username.txt
              name: sitecore-database
        - name: Master_Database_Password
          valueFrom:
            secretKeyRef:
              key: sitecore-master-database-password.txt
              name: sitecore-database
        - name: Core_Database_Username
          valueFrom:
            secretKeyRef:
              key: sitecore-core-database-username.txt
              name: sitecore-database
        - name: Core_Database_Password
          valueFrom:
            secretKeyRef:
              key: sitecore-core-database-password.txt
              name: sitecore-database
        - name: Web_Database_Username
          valueFrom:
            secretKeyRef:
              key: sitecore-web-database-username.txt
              name: sitecore-database
        - name: Web_Database_Password
          valueFrom:
            secretKeyRef:
              key: sitecore-web-database-password.txt
              name: sitecore-database
        - name: Forms_Database_Username
          valueFrom:
            secretKeyRef:
              key: sitecore-forms-database-username.txt
              name: sitecore-database
        - name: Forms_Database_Password
          valueFrom:
            secretKeyRef:
              key: sitecore-forms-database-password.txt
              name: sitecore-database
        - name: Exm_Master_Database_Username
          valueFrom:
            secretKeyRef:
              key: sitecore-exm-master-database-username.txt
              name: sitecore-database
        - name: Exm_Master_Database_Password
          valueFrom:
            secretKeyRef:
              key: sitecore-exm-master-database-password.txt
              name: sitecore-database
        - name: Messaging_Database_Username
          valueFrom:
            secretKeyRef:
              key: sitecore-messaging-database-username.txt
              name: sitecore-database
        - name: Messaging_Database_Password
          valueFrom:
            secretKeyRef:
              key: sitecore-messaging-database-password.txt
              name: sitecore-database
        - name: Reporting_Database_Username
          valueFrom:
            secretKeyRef:
              key: sitecore-reporting-database-username.txt
              name: sitecore-database
        - name: Reporting_Database_Password
          valueFrom:
            secretKeyRef:
              key: sitecore-reporting-database-password.txt
              name: sitecore-database
        - name: Reference_Data_Database_Username
          valueFrom:
            secretKeyRef:
              key: sitecore-reference-data-database-username.txt
              name: sitecore-database
        - name: Reference_Data_Database_Password
          valueFrom:
            secretKeyRef:
              key: sitecore-reference-data-database-password.txt
              name: sitecore-database
        - name: Sitecore_ConnectionStrings_Sitecoreidentity.secret
          valueFrom:
            secretKeyRef:
              key: sitecore-identitysecret.txt
              name: sitecore-identity
        - name: Sitecore_AppSettings_Telerik.AsyncUpload.ConfigurationEncryptionKey
          valueFrom:
            secretKeyRef:
              key: sitecore-telerikencryptionkey.txt
              name: sitecore-telerik
        - name: Sitecore_AppSettings_Telerik.Upload.ConfigurationHashKey
          valueFrom:
            secretKeyRef:
              key: sitecore-telerikencryptionkey.txt
              name: sitecore-telerik
        - name: Sitecore_AppSettings_Telerik.Web.UI.DialogParametersEncryptionKey
          valueFrom:
            secretKeyRef:
              key: sitecore-telerikencryptionkey.txt
              name: sitecore-telerik
        - name: Sitecore_ConnectionStrings_Reporting.ApiKey
          valueFrom:
            secretKeyRef:
              key: sitecore-reportingapikey.txt
              name: sitecore-reporting
        - name: Sitecore_License
          valueFrom:
            secretKeyRef:
              key: sitecore-license.txt
              name: sitecore-license
        - name: Sitecore_ConnectionStrings_Core
          value: Data Source=$(Database_Server);Initial Catalog=Sitecore.Core;User
            ID=$(Core_Database_Username);Password=$(Core_Database_Password);
        - name: Sitecore_ConnectionStrings_Security
          value: Data Source=$(Database_Server);Initial Catalog=Sitecore.Core;User
            ID=$(Core_Database_Username);Password=$(Core_Database_Password);
        - name: Sitecore_ConnectionStrings_Master
          value: Data Source=$(Database_Server);Initial Catalog=Sitecore.Master;User
            ID=$(Master_Database_Username);Password=$(Master_Database_Password);
        - name: Sitecore_ConnectionStrings_Web
          value: Data Source=$(Database_Server);Initial Catalog=Sitecore.Web;User
            ID=$(Web_Database_Username);Password=$(Web_Database_Password);
        - name: Sitecore_ConnectionStrings_Messaging
          value: Data Source=$(Database_Server);Initial Catalog=Sitecore.Messaging;User
            ID=$(Messaging_Database_Username);Password=$(Messaging_Database_Password);
        - name: Sitecore_ConnectionStrings_Xdb.Referencedata
          value: Data Source=$(Database_Server);Initial Catalog=Sitecore.Referencedata;User
            ID=$(Reference_Data_Database_Username);Password=$(Reference_Data_Database_Password);
        - name: Sitecore_ConnectionStrings_ExperienceForms
          value: Data Source=$(Database_Server);Initial Catalog=Sitecore.ExperienceForms;User
            ID=$(Forms_Database_Username);Password=$(Forms_Database_Password);
        - name: Sitecore_ConnectionStrings_Exm.Master
          value: Data Source=$(Database_Server);Initial Catalog=Sitecore.Exm.master;User
            ID=$(Exm_Master_Database_Username);Password=$(Exm_Master_Database_Password);
        - name: Sitecore_ConnectionStrings_Reporting
          value: Data Source=$(Database_Server);Initial Catalog=Sitecore.Reporting;User
            ID=$(Reporting_Database_Username);Password=$(Reporting_Database_Password);
        - name: Sitecore_ConnectionStrings_Sitecore.Reporting.Client
          value: http://cortexreporting
        - name: Sitecore_ConnectionStrings_Solr.Search
          valueFrom:
            secretKeyRef:
              key: sitecore-solr-connection-string.txt
              name: sitecore-solr
        - name: Sitecore_ConnectionStrings_XConnect.Collection
          value: http://xdbcollection
        - name: Sitecore_ConnectionStrings_XConnect.Search
          value: http://xdbsearch
        - name: Sitecore_ConnectionStrings_Xdb.MarketingAutomation.Operations.Client
          value: http://xdbautomation
        - name: Sitecore_ConnectionStrings_Xdb.MarketingAutomation.Reporting.Client
          value: http://xdbautomationrpt
        - name: Sitecore_ConnectionStrings_Xdb.ReferenceData.Client
          value: http://xdbrefdata
        - name: Sitecore_Processing_Service_Url
          value: http://prc
        - name: Sitecore_Processing_Service_Require_Https
          value: "false"
        - name: Sitecore_Identity_Server_InternalAuthority
          value: http://id
        - name: Sitecore_Identity_Server_Require_Https
          value: "false"
        - name: SOLR_CORE_PREFIX_NAME
          valueFrom:
            secretKeyRef:
              key: sitecore-solr-core-prefix-name.txt
              name: sitecore-solr
        - name: MEDIA_REQUEST_PROTECTION_SHARED_SECRET
          valueFrom:
            secretKeyRef:
              key: sitecore-media-request-protection-shared-secret.txt
              name: sitecore-protect-media-requests
        image: mbtestacr.azurecr.io/docker-examples/docker-examples-xp1-cm:320
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders:
            - name: X-Kubernetes-Probe
              value: Liveness
            path: /healthz/live
            port: 80
          periodSeconds: 30
          timeoutSeconds: 300
        name: sitecore-xp1-cm
        ports:
        - containerPort: 80
        resources:
          limits:
            cpu: 2000m
            memory: 3Gi
          requests:
            cpu: 1000m
            memory: 800Mi
        startupProbe:
          failureThreshold: 10
          httpGet:
            httpHeaders:
            - name: X-Kubernetes-Probe
              value: Startup
            path: /healthz/ready
            port: 80
          periodSeconds: 30
          timeoutSeconds: 300
      imagePullSecrets:
      - name: sitecore-docker-registry
      initContainers:
      - command:
        - pwsh
        - -Command
        - do { Start-Sleep -Seconds 3 } until ($(try {(iwr http://xdbcollection/healthz/ready).StatusCode
          -eq 200} catch { $false }));
        image: mcr.microsoft.com/powershell:lts-nanoserver-1809
        name: wait-xdbcollection
      - command:
        - pwsh
        - -Command
        - do { Start-Sleep -Seconds 3 } until ($(try {(iwr http://xdbsearch/healthz/ready).StatusCode
          -eq 200} catch { $false }));
        image: mcr.microsoft.com/powershell:lts-nanoserver-1809
        name: wait-xdbsearch
      - command:
        - pwsh
        - -Command
        - do { Start-Sleep -Seconds 3 } until ($(try {(iwr http://cortexreporting/healthz/ready).StatusCode
          -eq 200} catch { $false }));
        image: mcr.microsoft.com/powershell:lts-nanoserver-1809
        name: wait-cortexreporting
      - command:
        - pwsh
        - -Command
        - do { Start-Sleep -Seconds 3 } until ($(try {(iwr http://xdbautomation/healthz/ready).StatusCode
          -eq 200} catch { $false }));
        image: mcr.microsoft.com/powershell:lts-nanoserver-1809
        name: wait-xdbautomation
      - command:
        - pwsh
        - -Command
        - do { Start-Sleep -Seconds 3 } until ($(try {(iwr http://xdbautomationrpt/healthz/ready).StatusCode
          -eq 200} catch { $false }));
        image: mcr.microsoft.com/powershell:lts-nanoserver-1809
        name: wait-xdbautomationrpt
      - command:
        - pwsh
        - -Command
        - do { Start-Sleep -Seconds 3 } until ($(try {(iwr http://xdbrefdata/healthz/ready).StatusCode
          -eq 200} catch { $false }));
        image: mcr.microsoft.com/powershell:lts-nanoserver-1809
        name: wait-xdbrefdata
      nodeSelector:
        kubernetes.io/os: windows
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: cortexprocessing
  name: cortexprocessing
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cortexprocessing
  template:
    metadata:
      labels:
        app: cortexprocessing
    spec:
      containers:
      - env:
        - name: Database_Server
          valueFrom:
            secretKeyRef:
              key: sitecore-databaseservername.txt
              name: sitecore-database
        - name: Processing_Engine_Storage_Database_Username
          valueFrom:
            secretKeyRef:
              key: sitecore-processing-engine-storage-database-username.txt
              name: sitecore-database
        - name: Processing_Engine_Storage_Database_Password
          valueFrom:
            secretKeyRef:
              key: sitecore-processing-engine-storage-database-password.txt
              name: sitecore-database
        - name: Sitecore_License
          valueFrom:
            secretKeyRef:
              key: sitecore-license.txt
              name: sitecore-license
        - name: Sitecore_ConnectionStrings_Processing.Engine.Storage
          value: Data Source=$(Database_Server);Initial Catalog=Sitecore.Processing.Engine.Storage;User
            ID=$(Processing_Engine_Storage_Database_Username);Password=$(Processing_Engine_Storage_Database_Password);
        image: mbtestacr.azurecr.io/docker-examples/docker-examples-xp1-cortexprocessing:320
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders:
            - name: X-Kubernetes-Probe
              value: Liveness
            path: /healthz/live
            port: 80
          periodSeconds: 30
          timeoutSeconds: 300
        name: sitecore-xp1-cortexprocessing
        ports:
        - containerPort: 80
        resources:
          limits:
            cpu: 300m
            memory: 1Gi
          requests:
            cpu: 100m
            memory: 500Mi
        startupProbe:
          failureThreshold: 10
          httpGet:
            httpHeaders:
            - name: X-Kubernetes-Probe
              value: Startup
            path: /healthz/ready
            port: 80
          periodSeconds: 30
          timeoutSeconds: 300
      imagePullSecrets:
      - name: sitecore-docker-registry
      nodeSelector:
        kubernetes.io/os: windows
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: cortexprocessingworker
  name: cortexprocessingworker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cortexprocessingworker
  template:
    metadata:
      labels:
        app: cortexprocessingworker
    spec:
      containers:
      - env:
        - name: Database_Server
          valueFrom:
            secretKeyRef:
              key: sitecore-databaseservername.txt
              name: sitecore-database
        - name: Processing_Engine_Tasks_Database_Username
          valueFrom:
            secretKeyRef:
              key: sitecore-processing-engine-tasks-database-username.txt
              name: sitecore-database
        - name: Processing_Engine_Tasks_Database_Password
          valueFrom:
            secretKeyRef:
              key: sitecore-processing-engine-tasks-database-password.txt
              name: sitecore-database
        - name: Processing_Engine_Storage_Database_Username
          valueFrom:
            secretKeyRef:
              key: sitecore-processing-engine-storage-database-username.txt
              name: sitecore-database
        - name: Processing_Engine_Storage_Database_Password
          valueFrom:
            secretKeyRef:
              key: sitecore-processing-engine-storage-database-password.txt
              name: sitecore-database
        - name: Messaging_Database_Username
          valueFrom:
            secretKeyRef:
              key: sitecore-messaging-database-username.txt
              name: sitecore-database
        - name: Messaging_Database_Password
          valueFrom:
            secretKeyRef:
              key: sitecore-messaging-database-password.txt
              name: sitecore-database
        - name: Reporting_Database_Username
          valueFrom:
            secretKeyRef:
              key: sitecore-reporting-database-username.txt
              name: sitecore-database
        - name: Reporting_Database_Password
          valueFrom:
            secretKeyRef:
              key: sitecore-reporting-database-password.txt
              name: sitecore-database
        - name: Sitecore_License
          valueFrom:
            secretKeyRef:
              key: sitecore-license.txt
              name: sitecore-license
        - name: Sitecore_ConnectionStrings_Processing.Engine.Storage
          value: Data Source=$(Database_Server);Initial Catalog=Sitecore.Processing.Engine.Storage;User
            ID=$(Processing_Engine_Storage_Database_Username);Password=$(Processing_Engine_Storage_Database_Password);
        - name: Sitecore_ConnectionStrings_Processing.Engine.Tasks
          value: Data Source=$(Database_Server);Initial Catalog=Sitecore.Processing.Engine.Tasks;User
            ID=$(Processing_Engine_Tasks_Database_Username);Password=$(Processing_Engine_Tasks_Database_Password);
        - name: Sitecore_ConnectionStrings_Xconnect.Collection
          value: http://xdbcollection
        - name: Sitecore_ConnectionStrings_Xconnect.Configuration
          value: http://xdbcollection
        - name: Sitecore_ConnectionStrings_XConnect.Search
          value: http://xdbsearch
        - name: Sitecore_ConnectionStrings_Messaging
          value: Data Source=$(Database_Server);Initial Catalog=Sitecore.Messaging;User
            ID=$(Messaging_Database_Username);Password=$(Messaging_Database_Password);
        - name: Sitecore_ConnectionStrings_Reporting
          value: Data Source=$(Database_Server);Initial Catalog=Sitecore.Reporting;User
            ID=$(Reporting_Database_Username);Password=$(Reporting_Database_Password);
        image: mbtestacr.azurecr.io/docker-examples/docker-examples-xp1-cortexprocessingworker:320
        livenessProbe:
          exec:
            command:
            - curl
            - http://localhost:8080/healthz/live
          failureThreshold: 3
          periodSeconds: 30
          timeoutSeconds: 300
        name: sitecore-xp1-cortexprocessingworker
        resources:
          limits:
            cpu: 300m
            memory: 1Gi
          requests:
            cpu: 100m
            memory: 200Mi
        startupProbe:
          exec:
            command:
            - curl
            - http://localhost:8080/healthz/ready
          failureThreshold: 10
          periodSeconds: 30
          timeoutSeconds: 300
      imagePullSecrets:
      - name: sitecore-docker-registry
      initContainers:
      - command:
        - pwsh
        - -Command
        - do { Start-Sleep -Seconds 3 } until ($(try {(iwr http://xdbcollection/healthz/ready).StatusCode
          -eq 200} catch { $false }));
        image: mcr.microsoft.com/powershell:lts-nanoserver-1809
        name: wait-xdbcollection
      - command:
        - pwsh
        - -Command
        - do { Start-Sleep -Seconds 3 } until ($(try {(iwr http://xdbsearch/healthz/ready).StatusCode
          -eq 200} catch { $false }));
        image: mcr.microsoft.com/powershell:lts-nanoserver-1809
        name: wait-xdbsearch
      nodeSelector:
        kubernetes.io/os: windows
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: cortexreporting
  name: cortexreporting
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cortexreporting
  template:
    metadata:
      labels:
        app: cortexreporting
    spec:
      containers:
      - env:
        - name: Database_Server
          valueFrom:
            secretKeyRef:
              key: sitecore-databaseservername.txt
              name: sitecore-database
        - name: Reporting_Database_Username
          valueFrom:
            secretKeyRef:
              key: sitecore-reporting-database-username.txt
              name: sitecore-database
        - name: Reporting_Database_Password
          valueFrom:
            secretKeyRef:
              key: sitecore-reporting-database-password.txt
              name: sitecore-database
        - name: Sitecore_License
          valueFrom:
            secretKeyRef:
              key: sitecore-license.txt
              name: sitecore-license
        - name: Sitecore_ConnectionStrings_Reporting
          value: Data Source=$(Database_Server);Initial Catalog=Sitecore.Reporting;User
            ID=$(Reporting_Database_Username);Password=$(Reporting_Database_Password);
        image: mbtestacr.azurecr.io/docker-examples/docker-examples-xp1-cortexreporting:320
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders:
            - name: X-Kubernetes-Probe
              value: Liveness
            path: /healthz/live
            port: 80
          periodSeconds: 30
          timeoutSeconds: 300
        name: sitecore-xp1-cortexreporting
        ports:
        - containerPort: 80
        resources:
          limits:
            cpu: 300m
            memory: 1Gi
          requests:
            cpu: 100m
            memory: 500Mi
        startupProbe:
          failureThreshold: 10
          httpGet:
            httpHeaders:
            - name: X-Kubernetes-Probe
              value: Startup
            path: /healthz/ready
            port: 80
          periodSeconds: 30
          timeoutSeconds: 300
      imagePullSecrets:
      - name: sitecore-docker-registry
      nodeSelector:
        kubernetes.io/os: windows
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: id
  name: id
spec:
  replicas: 1
  selector:
    matchLabels:
      app: id
  template:
    metadata:
      labels:
        app: id
    spec:
      containers:
      - env:
        - name: Sitecore_Sitecore__IdentityServer__Clients__DefaultClient__AllowedCorsOrigins__AllowedCorsOriginsGroup2
          value: https://hrz.docker-examples.tk
        - name: Sitecore_Sitecore__IdentityServer__AccountOptions__PasswordRecoveryUrl
          value: https://cm.docker-examples.tk/sitecore/login?rc=1
        - name: Sitecore_Sitecore__IdentityServer__Clients__DefaultClient__AllowedCorsOrigins__AllowedCorsOriginsGroup1
          value: https://cm.docker-examples.tk
        - name: Sitecore_Sitecore__IdentityServer__PublicOrigin
          value: https://id.docker-examples.tk
        - name: Database_Server
          valueFrom:
            secretKeyRef:
              key: sitecore-databaseservername.txt
              name: sitecore-database
        - name: Core_Database_Username
          valueFrom:
            secretKeyRef:
              key: sitecore-core-database-username.txt
              name: sitecore-database
        - name: Core_Database_Password
          valueFrom:
            secretKeyRef:
              key: sitecore-core-database-password.txt
              name: sitecore-database
        - name: Sitecore_Sitecore__IdentityServer__Clients__PasswordClient__ClientSecrets__ClientSecret1
          valueFrom:
            secretKeyRef:
              key: sitecore-identitysecret.txt
              name: sitecore-identity
        - name: Sitecore_Sitecore__IdentityServer__CertificateRawData
          valueFrom:
            secretKeyRef:
              key: sitecore-identitycertificate.txt
              name: sitecore-identitycertificate
        - name: Sitecore_Sitecore__IdentityServer__CertificateRawDataPassword
          valueFrom:
            secretKeyRef:
              key: sitecore-identitycertificatepassword.txt
              name: sitecore-identitycertificate
        - name: Sitecore_License
          valueFrom:
            secretKeyRef:
              key: sitecore-license.txt
              name: sitecore-license
        - name: Sitecore_Sitecore__IdentityServer__SitecoreMemberShipOptions__ConnectionString
          value: Data Source=$(Database_Server);Initial Catalog=Sitecore.Core;User
            ID=$(Core_Database_Username);Password=$(Core_Database_Password);
        image: mbtestacr.azurecr.io/docker-examples/docker-examples-id:320
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders:
            - name: X-Kubernetes-Probe
              value: Liveness
            path: /healthz/live
            port: 80
          periodSeconds: 30
          timeoutSeconds: 300
        name: sitecore-xp1-id
        ports:
        - containerPort: 80
        resources:
          limits:
            cpu: 200m
            memory: 1Gi
          requests:
            cpu: 50m
            memory: 400Mi
        startupProbe:
          failureThreshold: 10
          httpGet:
            httpHeaders:
            - name: X-Kubernetes-Probe
              value: Startup
            path: /healthz/ready
            port: 80
          periodSeconds: 30
          timeoutSeconds: 300
      imagePullSecrets:
      - name: sitecore-docker-registry
      nodeSelector:
        kubernetes.io/os: windows
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: prc
  name: prc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prc
  template:
    metadata:
      labels:
        app: prc
    spec:
      containers:
      - env:
        - name: Sitecore_InstanceName
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: Database_Server
          valueFrom:
            secretKeyRef:
              key: sitecore-databaseservername.txt
              name: sitecore-database
        - name: Master_Database_Username
          valueFrom:
            secretKeyRef:
              key: sitecore-master-database-username.txt
              name: sitecore-database
        - name: Master_Database_Password
          valueFrom:
            secretKeyRef:
              key: sitecore-master-database-password.txt
              name: sitecore-database
        - name: Core_Database_Username
          valueFrom:
            secretKeyRef:
              key: sitecore-core-database-username.txt
              name: sitecore-database
        - name: Core_Database_Password
          valueFrom:
            secretKeyRef:
              key: sitecore-core-database-password.txt
              name: sitecore-database
        - name: Reporting_Database_Username
          valueFrom:
            secretKeyRef:
              key: sitecore-reporting-database-username.txt
              name: sitecore-database
        - name: Reporting_Database_Password
          valueFrom:
            secretKeyRef:
              key: sitecore-reporting-database-password.txt
              name: sitecore-database
        - name: Reference_Data_Database_Username
          valueFrom:
            secretKeyRef:
              key: sitecore-reference-data-database-username.txt
              name: sitecore-database
        - name: Reference_Data_Database_Password
          valueFrom:
            secretKeyRef:
              key: sitecore-reference-data-database-password.txt
              name: sitecore-database
        - name: Processing_Pools_Database_Username
          valueFrom:
            secretKeyRef:
              key: sitecore-processing-pools-database-username.txt
              name: sitecore-database
        - name: Processing_Pools_Database_Password
          valueFrom:
            secretKeyRef:
              key: sitecore-processing-pools-database-password.txt
              name: sitecore-database
        - name: Processing_Tasks_Database_Username
          valueFrom:
            secretKeyRef:
              key: sitecore-processing-tasks-database-username.txt
              name: sitecore-database
        - name: Processing_Tasks_Database_Password
          valueFrom:
            secretKeyRef:
              key: sitecore-processing-tasks-database-password.txt
              name: sitecore-database
        - name: Sitecore_ConnectionStrings_Reporting.ApiKey
          valueFrom:
            secretKeyRef:
              key: sitecore-reportingapikey.txt
              name: sitecore-reporting
        - name: Sitecore_License
          valueFrom:
            secretKeyRef:
              key: sitecore-license.txt
              name: sitecore-license
        - name: Sitecore_ConnectionStrings_Core
          value: Data Source=$(Database_Server);Initial Catalog=Sitecore.Core;User
            ID=$(Core_Database_Username);Password=$(Core_Database_Password);
        - name: Sitecore_ConnectionStrings_Security
          value: Data Source=$(Database_Server);Initial Catalog=Sitecore.Core;User
            ID=$(Core_Database_Username);Password=$(Core_Database_Password);
        - name: Sitecore_ConnectionStrings_Master
          value: Data Source=$(Database_Server);Initial Catalog=Sitecore.Master;User
            ID=$(Master_Database_Username);Password=$(Master_Database_Password);
        - name: Sitecore_ConnectionStrings_Xdb.Processing.Pools
          value: Data Source=$(Database_Server);Initial Catalog=Sitecore.Processing.pools;User
            ID=$(Processing_Pools_Database_Username);Password=$(Processing_Pools_Database_Password);
        - name: Sitecore_ConnectionStrings_Xdb.Referencedata
          value: Data Source=$(Database_Server);Initial Catalog=Sitecore.Referencedata;User
            ID=$(Reference_Data_Database_Username);Password=$(Reference_Data_Database_Password);
        - name: Sitecore_ConnectionStrings_Xdb.Processing.Tasks
          value: Data Source=$(Database_Server);Initial Catalog=Sitecore.Processing.tasks;User
            ID=$(Processing_Tasks_Database_Username);Password=$(Processing_Tasks_Database_Password);
        - name: Sitecore_ConnectionStrings_Reporting
          value: Data Source=$(Database_Server);Initial Catalog=Sitecore.Reporting;User
            ID=$(Reporting_Database_Username);Password=$(Reporting_Database_Password);
        - name: Sitecore_ConnectionStrings_XConnect.Collection
          value: http://xdbcollection
        - name: MEDIA_REQUEST_PROTECTION_SHARED_SECRET
          valueFrom:
            secretKeyRef:
              key: sitecore-media-request-protection-shared-secret.txt
              name: sitecore-protect-media-requests
        image: mbtestacr.azurecr.io/docker-examples/docker-examples-xp1-prc:320
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders:
            - name: X-Kubernetes-Probe
              value: Liveness
            path: /healthz/live
            port: 80
          periodSeconds: 30
          timeoutSeconds: 300
        name: sitecore-xp1-prc
        ports:
        - containerPort: 80
        resources:
          limits:
            cpu: 500m
            memory: 1.5Gi
          requests:
            cpu: 200m
            memory: 500Mi
        startupProbe:
          failureThreshold: 10
          httpGet:
            httpHeaders:
            - name: X-Kubernetes-Probe
              value: Startup
            path: /healthz/ready
            port: 80
          periodSeconds: 30
          timeoutSeconds: 300
      imagePullSecrets:
      - name: sitecore-docker-registry
      initContainers:
      - command:
        - pwsh
        - -Command
        - do { Start-Sleep -Seconds 3 } until ($(try {(iwr http://xdbcollection/healthz/ready).StatusCode
          -eq 200} catch { $false }));
        image: mcr.microsoft.com/powershell:lts-nanoserver-1809
        name: wait-xdbcollection
      nodeSelector:
        kubernetes.io/os: windows
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: xdbautomation
  name: xdbautomation
spec:
  replicas: 1
  selector:
    matchLabels:
      app: xdbautomation
  template:
    metadata:
      labels:
        app: xdbautomation
    spec:
      containers:
      - env:
        - name: Database_Server
          valueFrom:
            secretKeyRef:
              key: sitecore-databaseservername.txt
              name: sitecore-database
        - name: Marketing_Automation_Database_Username
          valueFrom:
            secretKeyRef:
              key: sitecore-marketing-automation-database-username.txt
              name: sitecore-database
        - name: Marketing_Automation_Database_Password
          valueFrom:
            secretKeyRef:
              key: sitecore-marketing-automation-database-password.txt
              name: sitecore-database
        - name: Messaging_Database_Username
          valueFrom:
            secretKeyRef:
              key: sitecore-messaging-database-username.txt
              name: sitecore-database
        - name: Messaging_Database_Password
          valueFrom:
            secretKeyRef:
              key: sitecore-messaging-database-password.txt
              name: sitecore-database
        - name: Reference_Data_Database_Username
          valueFrom:
            secretKeyRef:
              key: sitecore-reference-data-database-username.txt
              name: sitecore-database
        - name: Reference_Data_Database_Password
          valueFrom:
            secretKeyRef:
              key: sitecore-reference-data-database-password.txt
              name: sitecore-database
        - name: Sitecore_License
          valueFrom:
            secretKeyRef:
              key: sitecore-license.txt
              name: sitecore-license
        - name: Sitecore_ConnectionStrings_Messaging
          value: Data Source=$(Database_Server);Initial Catalog=Sitecore.Messaging;User
            ID=$(Messaging_Database_Username);Password=$(Messaging_Database_Password);
        - name: Sitecore_ConnectionStrings_Xdb.Marketingautomation
          value: Data Source=$(Database_Server);Initial Catalog=Sitecore.Marketingautomation;User
            ID=$(Marketing_Automation_Database_Username);Password=$(Marketing_Automation_Database_Password);
        - name: Sitecore_ConnectionStrings_Xdb.Referencedata
          value: Data Source=$(Database_Server);Initial Catalog=Sitecore.Referencedata;User
            ID=$(Reference_Data_Database_Username);Password=$(Reference_Data_Database_Password);
        - name: Sitecore_ConnectionStrings_XConnect.Collection
          value: http://xdbcollection
        - name: Sitecore_ConnectionStrings_XConnect.Search
          value: http://xdbsearch
        image: mbtestacr.azurecr.io/docker-examples/docker-examples-xp1-xdbautomation:320
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders:
            - name: X-Kubernetes-Probe
              value: Liveness
            path: /healthz/live
            port: 80
          periodSeconds: 30
          timeoutSeconds: 300
        name: sitecore-xp1-xdbautomation
        ports:
        - containerPort: 80
        resources:
          limits:
            cpu: 200m
            memory: 1Gi
          requests:
            cpu: 50m
            memory: 500Mi
        startupProbe:
          failureThreshold: 10
          httpGet:
            httpHeaders:
            - name: X-Kubernetes-Probe
              value: Startup
            path: /healthz/ready
            port: 80
          periodSeconds: 30
          timeoutSeconds: 300
      imagePullSecrets:
      - name: sitecore-docker-registry
      initContainers:
      - command:
        - pwsh
        - -Command
        - do { Start-Sleep -Seconds 3 } until ($(try {(iwr http://xdbcollection/healthz/ready).StatusCode
          -eq 200} catch { $false }));
        image: mcr.microsoft.com/powershell:lts-nanoserver-1809
        name: wait-xdbcollection
      - command:
        - pwsh
        - -Command
        - do { Start-Sleep -Seconds 3 } until ($(try {(iwr http://xdbsearch/healthz/ready).StatusCode
          -eq 200} catch { $false }));
        image: mcr.microsoft.com/powershell:lts-nanoserver-1809
        name: wait-xdbsearch
      nodeSelector:
        kubernetes.io/os: windows
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: xdbautomationrpt
  name: xdbautomationrpt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: xdbautomationrpt
  template:
    metadata:
      labels:
        app: xdbautomationrpt
    spec:
      containers:
      - env:
        - name: Database_Server
          valueFrom:
            secretKeyRef:
              key: sitecore-databaseservername.txt
              name: sitecore-database
        - name: Marketing_Automation_Database_Username
          valueFrom:
            secretKeyRef:
              key: sitecore-marketing-automation-database-username.txt
              name: sitecore-database
        - name: Marketing_Automation_Database_Password
          valueFrom:
            secretKeyRef:
              key: sitecore-marketing-automation-database-password.txt
              name: sitecore-database
        - name: Reference_Data_Database_Username
          valueFrom:
            secretKeyRef:
              key: sitecore-reference-data-database-username.txt
              name: sitecore-database
        - name: Reference_Data_Database_Password
          valueFrom:
            secretKeyRef:
              key: sitecore-reference-data-database-password.txt
              name: sitecore-database
        - name: Sitecore_License
          valueFrom:
            secretKeyRef:
              key: sitecore-license.txt
              name: sitecore-license
        - name: Sitecore_ConnectionStrings_Xdb.Marketingautomation
          value: Data Source=$(Database_Server);Initial Catalog=Sitecore.Marketingautomation;User
            ID=$(Marketing_Automation_Database_Username);Password=$(Marketing_Automation_Database_Password);
        - name: Sitecore_ConnectionStrings_Xdb.Referencedata
          value: Data Source=$(Database_Server);Initial Catalog=Sitecore.Referencedata;User
            ID=$(Reference_Data_Database_Username);Password=$(Reference_Data_Database_Password);
        image: mbtestacr.azurecr.io/docker-examples/docker-examples-xp1-xdbautomationrpt:320
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders:
            - name: X-Kubernetes-Probe
              value: Liveness
            path: /healthz/live
            port: 80
          periodSeconds: 30
          timeoutSeconds: 300
        name: sitecore-xp1-xdbautomationrpt
        ports:
        - containerPort: 80
        resources:
          limits:
            cpu: 200m
            memory: 1Gi
          requests:
            cpu: 50m
            memory: 500Mi
        startupProbe:
          failureThreshold: 10
          httpGet:
            httpHeaders:
            - name: X-Kubernetes-Probe
              value: Startup
            path: /healthz/ready
            port: 80
          periodSeconds: 30
          timeoutSeconds: 300
      imagePullSecrets:
      - name: sitecore-docker-registry
      nodeSelector:
        kubernetes.io/os: windows
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: xdbautomationworker
  name: xdbautomationworker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: xdbautomationworker
  template:
    metadata:
      labels:
        app: xdbautomationworker
    spec:
      containers:
      - env:
        - name: Database_Server
          valueFrom:
            secretKeyRef:
              key: sitecore-databaseservername.txt
              name: sitecore-database
        - name: Messaging_Database_Username
          valueFrom:
            secretKeyRef:
              key: sitecore-messaging-database-username.txt
              name: sitecore-database
        - name: Messaging_Database_Password
          valueFrom:
            secretKeyRef:
              key: sitecore-messaging-database-password.txt
              name: sitecore-database
        - name: Marketing_Automation_Database_Username
          valueFrom:
            secretKeyRef:
              key: sitecore-marketing-automation-database-username.txt
              name: sitecore-database
        - name: Marketing_Automation_Database_Password
          valueFrom:
            secretKeyRef:
              key: sitecore-marketing-automation-database-password.txt
              name: sitecore-database
        - name: Reference_Data_Database_Username
          valueFrom:
            secretKeyRef:
              key: sitecore-reference-data-database-username.txt
              name: sitecore-database
        - name: Reference_Data_Database_Password
          valueFrom:
            secretKeyRef:
              key: sitecore-reference-data-database-password.txt
              name: sitecore-database
        - name: Sitecore_License
          valueFrom:
            secretKeyRef:
              key: sitecore-license.txt
              name: sitecore-license
        - name: Sitecore_ConnectionStrings_XConnect.Collection
          value: http://xdbcollection
        - name: Sitecore_ConnectionStrings_XConnect.Search
          value: http://xdbsearch
        - name: Sitecore_ConnectionStrings_Xdb.Marketingautomation
          value: Data Source=$(Database_Server);Initial Catalog=Sitecore.Marketingautomation;User
            ID=$(Marketing_Automation_Database_Username);Password=$(Marketing_Automation_Database_Password);
        - name: Sitecore_ConnectionStrings_Xdb.Referencedata
          value: Data Source=$(Database_Server);Initial Catalog=Sitecore.Referencedata;User
            ID=$(Reference_Data_Database_Username);Password=$(Reference_Data_Database_Password);
        - name: Sitecore_ConnectionStrings_Messaging
          value: Data Source=$(Database_Server);Initial Catalog=Sitecore.Messaging;User
            ID=$(Messaging_Database_Username);Password=$(Messaging_Database_Password);
        image: mbtestacr.azurecr.io/docker-examples/docker-examples-xp1-xdbautomationworker:320
        livenessProbe:
          exec:
            command:
            - curl
            - http://localhost:8080/healthz/live
          failureThreshold: 3
          periodSeconds: 30
          timeoutSeconds: 300
        name: sitecore-xp1-xdbautomationworker
        resources:
          limits:
            cpu: 200m
            memory: 1Gi
          requests:
            cpu: 20m
            memory: 200Mi
        startupProbe:
          exec:
            command:
            - curl
            - http://localhost:8080/healthz/ready
          failureThreshold: 10
          periodSeconds: 30
          timeoutSeconds: 300
      imagePullSecrets:
      - name: sitecore-docker-registry
      initContainers:
      - command:
        - pwsh
        - -Command
        - do { Start-Sleep -Seconds 3 } until ($(try {(iwr http://xdbcollection/healthz/ready).StatusCode
          -eq 200} catch { $false }));
        image: mcr.microsoft.com/powershell:lts-nanoserver-1809
        name: wait-xdbcollection
      - command:
        - pwsh
        - -Command
        - do { Start-Sleep -Seconds 3 } until ($(try {(iwr http://xdbsearch/healthz/ready).StatusCode
          -eq 200} catch { $false }));
        image: mcr.microsoft.com/powershell:lts-nanoserver-1809
        name: wait-xdbsearch
      nodeSelector:
        kubernetes.io/os: windows
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: xdbcollection
  name: xdbcollection
spec:
  replicas: 1
  selector:
    matchLabels:
      app: xdbcollection
  template:
    metadata:
      labels:
        app: xdbcollection
    spec:
      containers:
      - env:
        - name: Database_Server
          valueFrom:
            secretKeyRef:
              key: sitecore-databaseservername.txt
              name: sitecore-database
        - name: Messaging_Database_Username
          valueFrom:
            secretKeyRef:
              key: sitecore-messaging-database-username.txt
              name: sitecore-database
        - name: Messaging_Database_Password
          valueFrom:
            secretKeyRef:
              key: sitecore-messaging-database-password.txt
              name: sitecore-database
        - name: Marketing_Automation_Database_Username
          valueFrom:
            secretKeyRef:
              key: sitecore-marketing-automation-database-username.txt
              name: sitecore-database
        - name: Marketing_Automation_Database_Password
          valueFrom:
            secretKeyRef:
              key: sitecore-marketing-automation-database-password.txt
              name: sitecore-database
        - name: Collection_ShardMapManager_Database_Username
          valueFrom:
            secretKeyRef:
              key: sitecore-collection-shardmapmanager-database-username.txt
              name: sitecore-database
        - name: Collection_ShardMapManager_Database_Password
          valueFrom:
            secretKeyRef:
              key: sitecore-collection-shardmapmanager-database-password.txt
              name: sitecore-database
        - name: Processing_Pools_Database_Username
          valueFrom:
            secretKeyRef:
              key: sitecore-processing-pools-database-username.txt
              name: sitecore-database
        - name: Processing_Pools_Database_Password
          valueFrom:
            secretKeyRef:
              key: sitecore-processing-pools-database-password.txt
              name: sitecore-database
        - name: Reference_Data_Database_Username
          valueFrom:
            secretKeyRef:
              key: sitecore-reference-data-database-username.txt
              name: sitecore-database
        - name: Reference_Data_Database_Password
          valueFrom:
            secretKeyRef:
              key: sitecore-reference-data-database-password.txt
              name: sitecore-database
        - name: Sitecore_License
          valueFrom:
            secretKeyRef:
              key: sitecore-license.txt
              name: sitecore-license
        - name: Sitecore_ConnectionStrings_Messaging
          value: Data Source=$(Database_Server);Initial Catalog=Sitecore.Messaging;User
            ID=$(Messaging_Database_Username);Password=$(Messaging_Database_Password);
        - name: Sitecore_ConnectionStrings_Xdb.Marketingautomation
          value: Data Source=$(Database_Server);Initial Catalog=Sitecore.Marketingautomation;User
            ID=$(Marketing_Automation_Database_Username);Password=$(Marketing_Automation_Database_Password);
        - name: Sitecore_ConnectionStrings_Xdb.Processing.Pools
          value: Data Source=$(Database_Server);Initial Catalog=Sitecore.Processing.pools;User
            ID=$(Processing_Pools_Database_Username);Password=$(Processing_Pools_Database_Password);
        - name: Sitecore_ConnectionStrings_Collection
          value: Data Source=$(Database_Server);Initial Catalog=Sitecore.Xdb.Collection.ShardMapManager;User
            ID=$(Collection_ShardMapManager_Database_Username);Password=$(Collection_ShardMapManager_Database_Password);
        - name: Sitecore_ConnectionStrings_Xdb.Referencedata
          value: Data Source=$(Database_Server);Initial Catalog=Sitecore.Referencedata;User
            ID=$(Reference_Data_Database_Username);Password=$(Reference_Data_Database_Password);
        image: mbtestacr.azurecr.io/docker-examples/docker-examples-xp1-xdbcollection:320
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders:
            - name: X-Kubernetes-Probe
              value: Liveness
            path: /healthz/live
            port: 80
          periodSeconds: 30
          timeoutSeconds: 300
        name: sitecore-xp1-xdbcollection
        ports:
        - containerPort: 80
        resources:
          limits:
            cpu: 350m
            memory: 1Gi
          requests:
            cpu: 150m
            memory: 500Mi
        startupProbe:
          failureThreshold: 10
          httpGet:
            httpHeaders:
            - name: X-Kubernetes-Probe
              value: Startup
            path: /healthz/ready
            port: 80
          periodSeconds: 30
          timeoutSeconds: 300
      imagePullSecrets:
      - name: sitecore-docker-registry
      nodeSelector:
        kubernetes.io/os: windows
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: xdbrefdata
  name: xdbrefdata
spec:
  replicas: 1
  selector:
    matchLabels:
      app: xdbrefdata
  template:
    metadata:
      labels:
        app: xdbrefdata
    spec:
      containers:
      - env:
        - name: Database_Server
          valueFrom:
            secretKeyRef:
              key: sitecore-databaseservername.txt
              name: sitecore-database
        - name: Reference_Data_Database_Username
          valueFrom:
            secretKeyRef:
              key: sitecore-reference-data-database-username.txt
              name: sitecore-database
        - name: Reference_Data_Database_Password
          valueFrom:
            secretKeyRef:
              key: sitecore-reference-data-database-password.txt
              name: sitecore-database
        - name: Sitecore_License
          valueFrom:
            secretKeyRef:
              key: sitecore-license.txt
              name: sitecore-license
        - name: Sitecore_ConnectionStrings_Xdb.Referencedata
          value: Data Source=$(Database_Server);Initial Catalog=Sitecore.Referencedata;User
            ID=$(Reference_Data_Database_Username);Password=$(Reference_Data_Database_Password);
        image: mbtestacr.azurecr.io/docker-examples/docker-examples-xp1-xdbrefdata:320
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders:
            - name: X-Kubernetes-Probe
              value: Liveness
            path: /healthz/live
            port: 80
          periodSeconds: 30
          timeoutSeconds: 300
        name: sitecore-xp1-xdbrefdata
        ports:
        - containerPort: 80
        resources:
          limits:
            cpu: 350m
            memory: 1Gi
          requests:
            cpu: 150m
            memory: 500Mi
        startupProbe:
          failureThreshold: 10
          httpGet:
            httpHeaders:
            - name: X-Kubernetes-Probe
              value: Startup
            path: /healthz/ready
            port: 80
          periodSeconds: 30
          timeoutSeconds: 300
      imagePullSecrets:
      - name: sitecore-docker-registry
      nodeSelector:
        kubernetes.io/os: windows
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: xdbsearch
  name: xdbsearch
spec:
  replicas: 1
  selector:
    matchLabels:
      app: xdbsearch
  template:
    metadata:
      labels:
        app: xdbsearch
    spec:
      containers:
      - env:
        - name: Database_Server
          valueFrom:
            secretKeyRef:
              key: sitecore-databaseservername.txt
              name: sitecore-database
        - name: Messaging_Database_Username
          valueFrom:
            secretKeyRef:
              key: sitecore-messaging-database-username.txt
              name: sitecore-database
        - name: Messaging_Database_Password
          valueFrom:
            secretKeyRef:
              key: sitecore-messaging-database-password.txt
              name: sitecore-database
        - name: Marketing_Automation_Database_Username
          valueFrom:
            secretKeyRef:
              key: sitecore-marketing-automation-database-username.txt
              name: sitecore-database
        - name: Marketing_Automation_Database_Password
          valueFrom:
            secretKeyRef:
              key: sitecore-marketing-automation-database-password.txt
              name: sitecore-database
        - name: Collection_ShardMapManager_Database_Username
          valueFrom:
            secretKeyRef:
              key: sitecore-collection-shardmapmanager-database-username.txt
              name: sitecore-database
        - name: Collection_ShardMapManager_Database_Password
          valueFrom:
            secretKeyRef:
              key: sitecore-collection-shardmapmanager-database-password.txt
              name: sitecore-database
        - name: Processing_Pools_Database_Username
          valueFrom:
            secretKeyRef:
              key: sitecore-processing-pools-database-username.txt
              name: sitecore-database
        - name: Processing_Pools_Database_Password
          valueFrom:
            secretKeyRef:
              key: sitecore-processing-pools-database-password.txt
              name: sitecore-database
        - name: Reference_Data_Database_Username
          valueFrom:
            secretKeyRef:
              key: sitecore-reference-data-database-username.txt
              name: sitecore-database
        - name: Reference_Data_Database_Password
          valueFrom:
            secretKeyRef:
              key: sitecore-reference-data-database-password.txt
              name: sitecore-database
        - name: Sitecore_License
          valueFrom:
            secretKeyRef:
              key: sitecore-license.txt
              name: sitecore-license
        - name: Sitecore_ConnectionStrings_Messaging
          value: Data Source=$(Database_Server);Initial Catalog=Sitecore.Messaging;User
            ID=$(Messaging_Database_Username);Password=$(Messaging_Database_Password);
        - name: Sitecore_ConnectionStrings_Xdb.Marketingautomation
          value: Data Source=$(Database_Server);Initial Catalog=Sitecore.Marketingautomation;User
            ID=$(Marketing_Automation_Database_Username);Password=$(Marketing_Automation_Database_Password);
        - name: Sitecore_ConnectionStrings_Xdb.Processing.Pools
          value: Data Source=$(Database_Server);Initial Catalog=Sitecore.Processing.pools;User
            ID=$(Processing_Pools_Database_Username);Password=$(Processing_Pools_Database_Password);
        - name: Sitecore_ConnectionStrings_Collection
          value: Data Source=$(Database_Server);Initial Catalog=Sitecore.Xdb.Collection.ShardMapManager;User
            ID=$(Collection_ShardMapManager_Database_Username);Password=$(Collection_ShardMapManager_Database_Password);
        - name: Sitecore_ConnectionStrings_Xdb.Referencedata
          value: Data Source=$(Database_Server);Initial Catalog=Sitecore.Referencedata;User
            ID=$(Reference_Data_Database_Username);Password=$(Reference_Data_Database_Password);
        - name: Sitecore_ConnectionStrings_SolrCore
          valueFrom:
            secretKeyRef:
              key: sitecore-solr-connection-string-xdb.txt
              name: sitecore-solr-xdb
        - name: Sitecore_Sitecore__XConnect__CollectionSearch__Services__Solr.SolrReaderSettings__Options__RequireHttps
          value: "false"
        - name: Sitecore_Sitecore__XConnect__CollectionSearch__Services__XConnectSolrHealthCheckServicesConfiguration__Options__RequireHttps
          value: "false"
        image: mbtestacr.azurecr.io/docker-examples/docker-examples-xp1-xdbsearch:320
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders:
            - name: X-Kubernetes-Probe
              value: Liveness
            path: /healthz/live
            port: 80
          periodSeconds: 30
          timeoutSeconds: 300
        name: sitecore-xp1-xdbsearch
        ports:
        - containerPort: 80
        resources:
          limits:
            cpu: 350m
            memory: 1Gi
          requests:
            cpu: 150m
            memory: 500Mi
        startupProbe:
          failureThreshold: 10
          httpGet:
            httpHeaders:
            - name: X-Kubernetes-Probe
              value: Startup
            path: /healthz/ready
            port: 80
          periodSeconds: 30
          timeoutSeconds: 300
      imagePullSecrets:
      - name: sitecore-docker-registry
      nodeSelector:
        kubernetes.io/os: windows
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: xdbsearchworker
  name: xdbsearchworker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: xdbsearchworker
  template:
    metadata:
      labels:
        app: xdbsearchworker
    spec:
      containers:
      - env:
        - name: Database_Server
          valueFrom:
            secretKeyRef:
              key: sitecore-databaseservername.txt
              name: sitecore-database
        - name: Collection_ShardMapManager_Database_Username
          valueFrom:
            secretKeyRef:
              key: sitecore-collection-shardmapmanager-database-username.txt
              name: sitecore-database
        - name: Collection_ShardMapManager_Database_Password
          valueFrom:
            secretKeyRef:
              key: sitecore-collection-shardmapmanager-database-password.txt
              name: sitecore-database
        - name: Sitecore_License
          valueFrom:
            secretKeyRef:
              key: sitecore-license.txt
              name: sitecore-license
        - name: Sitecore_ConnectionStrings_Collection
          value: Data Source=$(Database_Server);Initial Catalog=Sitecore.Xdb.Collection.ShardMapManager;User
            ID=$(Collection_ShardMapManager_Database_Username);Password=$(Collection_ShardMapManager_Database_Password);
        - name: Sitecore_ConnectionStrings_SolrCore
          valueFrom:
            secretKeyRef:
              key: sitecore-solr-connection-string-xdb.txt
              name: sitecore-solr-xdb
        - name: Sitecore_Sitecore__XConnect__SearchIndexer__Services__Solr.SolrReaderSettings__Options__RequireHttps
          value: "false"
        - name: Sitecore_Sitecore__XConnect__SearchIndexer__Services__Solr.SolrWriterSettings__Options__RequireHttps
          value: "false"
        - name: Sitecore_Sitecore__XConnect__CollectionSearch__Services__XConnectSolrHealthCheckServicesConfiguration__Options__RequireHttps
          value: "false"
        image: mbtestacr.azurecr.io/docker-examples/docker-examples-xp1-xdbsearchworker:320
        livenessProbe:
          exec:
            command:
            - curl
            - http://localhost:8080/healthz/live
          failureThreshold: 3
          periodSeconds: 30
          timeoutSeconds: 300
        name: sitecore-xp1-xdbsearchworker
        resources:
          limits:
            cpu: 300m
            memory: 1Gi
          requests:
            cpu: 50m
            memory: 400Mi
        startupProbe:
          exec:
            command:
            - curl
            - http://localhost:8080/healthz/ready
          failureThreshold: 10
          periodSeconds: 30
          timeoutSeconds: 300
      imagePullSecrets:
      - name: sitecore-docker-registry
      nodeSelector:
        kubernetes.io/os: windows
