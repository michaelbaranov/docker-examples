# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  branches:
    include:
      - master
  paths:
    include:
    - getting-started/kubernetes/infrastructure

variables:
- group: Infrastructure

stages: 
- stage: PrepeareAgent
  jobs:
    - job: InstallTerraform
      steps:
      - task: TerraformInstaller@0
        displayName: Install Terraform 
        inputs:
          terraformVersion: '0.14.5'
      - script: terraform version
- stage: RunDeployment
  jobs:
    - job: PlanAndApply
      steps:
        - task: TerraformTaskV1@0
          displayName: Terraform Init
          inputs:
            provider: 'azurerm'
            command: 'init'
            workingDirectory: 'getting-started/kubernetes/infrastructure'
            backendServiceArm: 'DockerExamplesAzureConnection'
            backendAzureRmResourceGroupName: '$(ResourceGroup)'
            backendAzureRmStorageAccountName: '$(StorageAccount)'
            backendAzureRmContainerName: '$(ContainerName)'
            backendAzureRmKey: '$(StateFileName)'
        - task: TerraformTaskV1@0
          displayName: 'Validate template'
          inputs:
            provider: 'azurerm'
            command: 'validate'
            workingDirectory: 'getting-started/kubernetes/infrastructure'
        - task: TerraformTaskV1@0
          displayName: 'Build plan'
          inputs:
            provider: 'azurerm'
            command: 'plan'
            workingDirectory: 'getting-started/kubernetes/infrastructure'
            commandOptions: '-out=tfplan -var deployment_prefix=$(DeploymentPrefix) -var location=$(Location)'
            environmentServiceNameAzureRM: 'DockerExamplesAzureConnection'
        - task: TerraformTaskV1@0
          displayName: 'Apply infrastructure changes'
          inputs:
            provider: 'azurerm'
            command: 'apply'
            workingDirectory: 'getting-started/kubernetes/infrastructure'
            commandOptions: '-auto-approve tfplan'
            environmentServiceNameAzureRM: 'DockerExamplesAzureConnection'

pool:
  vmImage: ubuntu-latest